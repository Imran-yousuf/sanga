@import "../_global";


// INCLUDE GRID
$include-grid: false !default;
$include-xl-grid: false !default;


// GRID DEFAULTS
$row-width: rem-calc(1280) !default;
$total-columns: 12 !default;
$column-gutter: rem-calc(40) !default;
$last-child-float: $default-float !default;

// INCLUDE PUSH-PULL, OFFSET, RESET ORDER 
$include-column-push-pull: false !default;
$include-column-offset: false !default;
$include-column-reset-order: false !default;


// GRID CALCULATOR
@function gridCalc($colNumber, $totalColumns) {
	@return grid-calc($colNumber, $totalColumns);
}

@function grid-calc($colNumber, $totalColumns) {
 	@return percentage(($colNumber / $totalColumns));
}


// MIXIN - GRID ROW
@mixin grid-row($behavior: false) {

	@if $behavior == nest {
		margin-bottom: 0;
		margin-#{$default-float}: -($column-gutter/2);
		margin-#{$opposite-direction}: -($column-gutter/2);
		margin-top: 0;
		max-width: none;
		width: auto;
	}

	@else if $behavior == collapse {
		margin: 0;
		max-width: $row-width;
		width: 100%;
	}

	@else if $behavior == nest-collapse {
		margin: 0;
		max-width: none;
		width: auto;
	}

	@else {
		margin-bottom: 0;
		margin-#{$default-float}: auto;
		margin-#{$opposite-direction}: auto;
		margin-top: 0;
		max-width: $row-width;
		width: 100%;
	}

  @include clearfix();
}


// MIXIN - GRID COLUMN
@mixin grid-column(
$center:false,
$collapse:false,
$columns:false,
$float:true,
$last-column:false,
$offset:false,
$position:false,
$pull:false,
$push:false){

	@if $float {
		@if $float == left or $float == true { float: $default-float; }
		@else if $float == right { float: $opposite-direction; }
		@else { float: none; }
	}

	@if $collapse {
		padding-left: 0;
		padding-right: 0;
	}

	@if $position or $push or $pull {
		position: relative;
	}

	@else if $collapse == false {
		padding-left: $column-gutter / 2;
		padding-right: $column-gutter / 2;
	}

	@if $columns {
		@if $last-column { float: $opposite-direction; }

		width: grid-calc($columns, $total-columns);
	}

	@if $push { 
		#{$default-float}: grid-calc($push, $total-columns); 
		#{$opposite-direction}: auto;
	}

	@if $pull { 
		#{$opposite-direction}: grid-calc($pull, $total-columns); 
		#{$default-float}: auto;
	}

	@if $center {
		float: none;
		margin-#{$default-float}: auto;
		margin-#{$opposite-direction}: auto;
	}

	@if $offset { 
		margin-#{$default-float}: grid-calc($offset, $total-columns) !important; 
	}
}


// MIXIN - GRID CLASSES
@mixin grid-html-classes($size) {

	.column,
	.columns { @include grid-column($columns:false, $position:true); }

	.column.#{$size}-centered,
	.columns.#{$size}-centered { @include grid-column($center:true, $collapse:null, $float:false);

		&:last-child{ float: none; }
	}
	
	.column.#{$size}-uncentered,
	.columns.#{$size}-uncentered {
		float: $default-float;
		margin-#{$default-float}: 0;
		margin-#{$opposite-direction}: 0;

		&:last-child{ float: $default-float; }

		&.opposite{ float: $opposite-direction; }
	}

	@for $i from 1 through $total-columns {
		.#{$size}-#{$i} { @include grid-column($columns:$i,$collapse:null,$float:false); }
	}
	
	@if $include-column-offset{
		@for $i from 0 through $total-columns - 1 {
			.#{$size}-offset-#{$i} { @include grid-column($offset:$i, $collapse:null,$float:false); }
		}
	}

	@if $include-column-push-pull{
		@for $i from 0 through $total-columns - 1 {
			.#{$size}-push-#{$i} { @include grid-column($push:$i, $collapse:null, $float:false); }
			.#{$size}-pull-#{$i} { @include grid-column($pull:$i, $collapse:null, $float:false); }
		}
	}

	@if $include-column-reset-order{
		.#{$size}-reset-order {
			float: $default-float;
			left: auto;
			margin-#{$default-float}: 0;
			margin-#{$opposite-direction}: 0;
			right: auto;
		}
	}
}


// INCLUDE GRID
@if $include-grid {
	.row {
		@include grid-row;

		&.collapse {
			> .column,
			> .columns {  @include grid-column($collapse:true, $float:false); }

			.row {
				margin-left:0; 
				margin-right:0;
			}
		}

		.row { 	@include grid-row($behavior:nest);
			// &.collapse { @include grid-row($behavior:nest-collapse); }
		}
	}

	.column,
	.columns { @include grid-column($columns:$total-columns); }


	@media #{$small-up} { @include grid-html-classes($size:small); }

	@media #{$medium-up} { 
		@include grid-html-classes($size:medium); 

		// INCLUDE PUSH PULL
		@if $include-column-push-pull{
			@for $i from 0 through $total-columns - 1 {
				.push-#{$i} { @include grid-column($push:$i, $collapse:null, $float:false); }
				.pull-#{$i} { @include grid-column($pull:$i, $collapse:null, $float:false); }
			}
		}
	}

	@media #{$large-up} {
		@include grid-html-classes($size:large);
		
		// INCLUDE PUSH PULL
		@if $include-column-push-pull{
			@for $i from 0 through $total-columns - 1 {
				.push-#{$i} { @include grid-column($push:$i, $collapse:null, $float:false); }
				.pull-#{$i} { @include grid-column($pull:$i, $collapse:null, $float:false); }
			}
		}
	}
}


// INCLUDE XL GRID
@if $include-xl-grid {
	@media #{$xlarge-up} { @include grid-html-classes($size:xlarge); }
	@media #{$xxlarge-up} { @include grid-html-classes($size:xxlarge); }
}